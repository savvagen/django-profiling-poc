version: '3.7'

services:
  loadbalancer:
    image: loadbalancer:latest
    container_name: loadbalancer
    build:
      context: .
      dockerfile: ./compose/loadbalancer/Dockerfile
    healthcheck:
      test: wget http://localhost:8000/nginx_status -O -
    ports:
      - "8001:8000"
    depends_on:
      - django
    restart: "on-failure"

  django:
    image: django_profiling_app:latest
    container_name: django
    build:
      context: .
      dockerfile: compose/django/Dockerfile
    env_file:
      - .envs/.django/.env
      - .envs/.postgres/.env
    # execute django from mounted source
    #volumes:
    #  - .:/app
    depends_on:
      - postgres
    ports:
      - "5000:5000"
    command: /gunicorn.sh
    healthcheck:
      test: python -c "import requests; exit(requests.get('http://127.0.0.1:5000/health_check/').status_code != 200)"
      start_period: 1h
    restart: "on-failure"

  postgres:
    image: postgres:10
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    env_file:
      - .envs/.postgres/.env
    healthcheck:
      test: "pg_isready --username=$${POSTGRES_USER} --dbname=$${POSTGRES_DB}"

networks:
  default:
    name: gatling-sandbox

volumes:
  # This is necessary for not removing volumes after a hard-restart.
  postgres_data: {}